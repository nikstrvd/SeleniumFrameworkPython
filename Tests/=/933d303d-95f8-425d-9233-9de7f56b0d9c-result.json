{"name": "test_LoginPage", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <Pages.LoginPage.LoginPage object at 0x000002956115D120>, locatorValue = 'password1', locatorType = 'id'\n\n    def waitForElement(self, locatorValue, locatorType=\"id\"):\n        webElement = None\n        try:\n            locatorType = locatorType.lower()\n            locatorByType = self.getLocatorType(locatorType)\n            wait = WebDriverWait(self.driver, 25, poll_frequency=1,\n                                 ignored_exceptions=[ElementNotVisibleException, NoSuchElementException])\n>           webElement = wait.until(ec.presence_of_element_located((locatorByType, locatorValue)))\n\n..\\Base\\BasePage.py:74: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"9c3e1432b3833042be8dc39109aa2aaa\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x000002956112BAC0>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except InvalidSelectorException as e:\n                raise e\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       Backtrace:\nE       \tOrdinal0 [0x004DFDC3+2555331]\nE       \tOrdinal0 [0x004777F1+2127857]\nE       \tOrdinal0 [0x00372E08+1060360]\nE       \tOrdinal0 [0x0039E49E+1238174]\nE       \tOrdinal0 [0x0039E69B+1238683]\nE       \tOrdinal0 [0x003C9252+1413714]\nE       \tOrdinal0 [0x003B7B54+1342292]\nE       \tOrdinal0 [0x003C75FA+1406458]\nE       \tOrdinal0 [0x003B7976+1341814]\nE       \tOrdinal0 [0x003936B6+1193654]\nE       \tOrdinal0 [0x00394546+1197382]\nE       \tGetHandleVerifier [0x00679622+1619522]\nE       \tGetHandleVerifier [0x0072882C+2336844]\nE       \tGetHandleVerifier [0x005723E1+541697]\nE       \tGetHandleVerifier [0x00571443+537699]\nE       \tOrdinal0 [0x0047D18E+2150798]\nE       \tOrdinal0 [0x00481518+2168088]\nE       \tOrdinal0 [0x00481660+2168416]\nE       \tOrdinal0 [0x0048B330+2208560]\nE       \tBaseThreadInitThunk [0x76A06739+25]\nE       \tRtlGetFullPathName_UEx [0x77A78AFF+1215]\nE       \tRtlGetFullPathName_UEx [0x77A78ACD+1165]\n\n..\\venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:89: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <Pages.LoginPage.LoginPage object at 0x000002956115D120>, text = '123456', locatorValue = 'password1', locatorType = 'id'\n\n    def sendText(self, text, locatorValue, locatorType=\"id\"):\n        try:\n            locatorType = locatorType.lower()\n>           webElement = self.waitForElement(locatorValue, locatorType)\n\n..\\Base\\BasePage.py:101: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Pages.LoginPage.LoginPage object at 0x000002956115D120>, locatorValue = 'password1', locatorType = 'id'\n\n    def waitForElement(self, locatorValue, locatorType=\"id\"):\n        webElement = None\n        try:\n            locatorType = locatorType.lower()\n            locatorByType = self.getLocatorType(locatorType)\n            wait = WebDriverWait(self.driver, 25, poll_frequency=1,\n                                 ignored_exceptions=[ElementNotVisibleException, NoSuchElementException])\n            webElement = wait.until(ec.presence_of_element_located((locatorByType, locatorValue)))\n            self.log.info(\"WebElement found with locator value \" + locatorValue + \" using locatorType \" + locatorType)\n        except:\n            self.log.error(\n                \"WebElement not found with locator value \" + locatorValue + \" using locatorType \" + locatorType)\n            print_stack()\n            self.takeScreenshot(locatorType)\n>           assert False\nE           AssertionError\n\n..\\Base\\BasePage.py:81: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <Tests.test_LoginDemo.LoginPageDemoTest testMethod=test_LoginPage>\n\n    @pytest.mark.run(order=1)\n    def test_LoginPage(self):\n>       self.lp.doLogin()\n\ntest_LoginDemo.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\Pages\\LoginPage.py:21: in doLogin\n    self.sendText(\"123456\", self._password, \"id\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Pages.LoginPage.LoginPage object at 0x000002956115D120>, text = '123456', locatorValue = 'password1', locatorType = 'id'\n\n    def sendText(self, text, locatorValue, locatorType=\"id\"):\n        try:\n            locatorType = locatorType.lower()\n            webElement = self.waitForElement(locatorValue, locatorType)\n            webElement.send_keys(text)\n            self.log.info(\n                \"Sent the text \" + text + \" in WebElement with locator value \" + locatorValue + \" using locatorType \" + locatorType)\n        except:\n            self.log.error(\n                \"Unable to Sent the text \" + text + \" in WebElement with locator value \" + locatorValue + \"using locatorType \" + locatorType)\n            print_stack()\n            self.takeScreenshot(locatorType)\n>           assert False\nE           AssertionError\n\n..\\Base\\BasePage.py:110: AssertionError"}, "attachments": [{"name": "id", "source": "62b9e96c-a299-4619-9ce0-941b5e2f33c8-attachment.png", "type": "image/png"}, {"name": "id", "source": "195b6078-9c8d-4af8-8d69-766c654ad1ca-attachment.png", "type": "image/png"}, {"name": "log", "source": "74719d80-ec10-401e-8476-c3d0fd2df652-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "f58f7cdc-45f9-4df5-bdba-a0b8f8408330-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "98371abb-2057-44aa-bb7a-b990d55a7197-attachment.txt", "type": "text/plain"}], "start": 1644409024234, "stop": 1644409050419, "uuid": "c063b0bb-a768-4862-827f-ec6a9973936e", "historyId": "1601b7d1d13bbf5b47ee7168638d9f61", "testCaseId": "e304321e2a00af8b9e3852be48988721", "fullName": "Tests.test_LoginDemo.LoginPageDemoTest#test_LoginPage", "labels": [{"name": "tag", "value": "run(order=1)"}, {"name": "tag", "value": "@pytest.mark.usefixtures('beforeClass', 'beforeMethod')"}, {"name": "parentSuite", "value": "Tests"}, {"name": "suite", "value": "test_LoginDemo"}, {"name": "subSuite", "value": "LoginPageDemoTest"}, {"name": "host", "value": "LAPTOP-PVF3C24O"}, {"name": "thread", "value": "11620-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_LoginDemo"}]}